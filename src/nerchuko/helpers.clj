(ns nerchuko.helpers
  "Functions that help with various auxiliary tasks such as converting
documents to the necessary format etc."
  (:use nerchuko.utils
        clj-text.tokenization)
  (:use [clojure.contrib.duck-streams :only (spit)]
        clojure.contrib.generic.functor
        [clojure.contrib.seq-utils :only (frequencies)]))

(defn save-model
  "Saves model to a file."
  [file model]
  (binding [*print-dup* true]
    (spit file
          (pr-str (merge {} model)))))

(defn load-model
  "Load model from a file."
  [file]
  (read-string (slurp file)))

(defstruct
    #^{:doc "A structure basis for a model generated by
a classifier.
:classifier A symbol representing the namespace of the classifier used
            to generate the model.
:classes    A set of all the classes.
:features   A set of all the features."}
  model
  :classifier :classes :features)
